// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ovf_lut.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ovf_5flut_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ovf_5flut_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ovf_5flut_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ovf_5flut_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ovf_5flut_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_ovf_5flut_2eproto_metadata_getter(int index);
namespace OpenVectorFormat {
class JobLUT;
struct JobLUTDefaultTypeInternal;
extern JobLUTDefaultTypeInternal _JobLUT_default_instance_;
class WorkPlaneLUT;
struct WorkPlaneLUTDefaultTypeInternal;
extern WorkPlaneLUTDefaultTypeInternal _WorkPlaneLUT_default_instance_;
}  // namespace OpenVectorFormat
PROTOBUF_NAMESPACE_OPEN
template<> ::OpenVectorFormat::JobLUT* Arena::CreateMaybeMessage<::OpenVectorFormat::JobLUT>(Arena*);
template<> ::OpenVectorFormat::WorkPlaneLUT* Arena::CreateMaybeMessage<::OpenVectorFormat::WorkPlaneLUT>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace OpenVectorFormat {

// ===================================================================

class JobLUT PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:OpenVectorFormat.JobLUT) */ {
 public:
  inline JobLUT() : JobLUT(nullptr) {}
  virtual ~JobLUT();
  explicit constexpr JobLUT(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JobLUT(const JobLUT& from);
  JobLUT(JobLUT&& from) noexcept
    : JobLUT() {
    *this = ::std::move(from);
  }

  inline JobLUT& operator=(const JobLUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobLUT& operator=(JobLUT&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const JobLUT& default_instance() {
    return *internal_default_instance();
  }
  static inline const JobLUT* internal_default_instance() {
    return reinterpret_cast<const JobLUT*>(
               &_JobLUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(JobLUT& a, JobLUT& b) {
    a.Swap(&b);
  }
  inline void Swap(JobLUT* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JobLUT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline JobLUT* New() const final {
    return CreateMaybeMessage<JobLUT>(nullptr);
  }

  JobLUT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<JobLUT>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const JobLUT& from);
  void MergeFrom(const JobLUT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobLUT* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "OpenVectorFormat.JobLUT";
  }
  protected:
  explicit JobLUT(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ovf_5flut_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorkPlanePositionsFieldNumber = 2,
    kJobShellPositionFieldNumber = 1,
  };
  // repeated int64 workPlanePositions = 2;
  int workplanepositions_size() const;
  private:
  int _internal_workplanepositions_size() const;
  public:
  void clear_workplanepositions();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_workplanepositions(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_workplanepositions() const;
  void _internal_add_workplanepositions(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_workplanepositions();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 workplanepositions(int index) const;
  void set_workplanepositions(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_workplanepositions(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      workplanepositions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_workplanepositions();

  // int64 jobShellPosition = 1;
  void clear_jobshellposition();
  ::PROTOBUF_NAMESPACE_ID::int64 jobshellposition() const;
  void set_jobshellposition(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_jobshellposition() const;
  void _internal_set_jobshellposition(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:OpenVectorFormat.JobLUT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > workplanepositions_;
  mutable std::atomic<int> _workplanepositions_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 jobshellposition_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ovf_5flut_2eproto;
};
// -------------------------------------------------------------------

class WorkPlaneLUT PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:OpenVectorFormat.WorkPlaneLUT) */ {
 public:
  inline WorkPlaneLUT() : WorkPlaneLUT(nullptr) {}
  virtual ~WorkPlaneLUT();
  explicit constexpr WorkPlaneLUT(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  WorkPlaneLUT(const WorkPlaneLUT& from);
  WorkPlaneLUT(WorkPlaneLUT&& from) noexcept
    : WorkPlaneLUT() {
    *this = ::std::move(from);
  }

  inline WorkPlaneLUT& operator=(const WorkPlaneLUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkPlaneLUT& operator=(WorkPlaneLUT&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WorkPlaneLUT& default_instance() {
    return *internal_default_instance();
  }
  static inline const WorkPlaneLUT* internal_default_instance() {
    return reinterpret_cast<const WorkPlaneLUT*>(
               &_WorkPlaneLUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(WorkPlaneLUT& a, WorkPlaneLUT& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkPlaneLUT* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkPlaneLUT* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WorkPlaneLUT* New() const final {
    return CreateMaybeMessage<WorkPlaneLUT>(nullptr);
  }

  WorkPlaneLUT* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WorkPlaneLUT>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WorkPlaneLUT& from);
  void MergeFrom(const WorkPlaneLUT& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkPlaneLUT* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "OpenVectorFormat.WorkPlaneLUT";
  }
  protected:
  explicit WorkPlaneLUT(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ovf_5flut_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVectorBlocksPositionsFieldNumber = 2,
    kWorkPlaneShellPositionFieldNumber = 1,
  };
  // repeated int64 vectorBlocksPositions = 2;
  int vectorblockspositions_size() const;
  private:
  int _internal_vectorblockspositions_size() const;
  public:
  void clear_vectorblockspositions();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_vectorblockspositions(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_vectorblockspositions() const;
  void _internal_add_vectorblockspositions(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_vectorblockspositions();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 vectorblockspositions(int index) const;
  void set_vectorblockspositions(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_vectorblockspositions(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      vectorblockspositions() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_vectorblockspositions();

  // int64 workPlaneShellPosition = 1;
  void clear_workplaneshellposition();
  ::PROTOBUF_NAMESPACE_ID::int64 workplaneshellposition() const;
  void set_workplaneshellposition(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_workplaneshellposition() const;
  void _internal_set_workplaneshellposition(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:OpenVectorFormat.WorkPlaneLUT)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > vectorblockspositions_;
  mutable std::atomic<int> _vectorblockspositions_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 workplaneshellposition_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ovf_5flut_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JobLUT

// int64 jobShellPosition = 1;
inline void JobLUT::clear_jobshellposition() {
  jobshellposition_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobLUT::_internal_jobshellposition() const {
  return jobshellposition_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobLUT::jobshellposition() const {
  // @@protoc_insertion_point(field_get:OpenVectorFormat.JobLUT.jobShellPosition)
  return _internal_jobshellposition();
}
inline void JobLUT::_internal_set_jobshellposition(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  jobshellposition_ = value;
}
inline void JobLUT::set_jobshellposition(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_jobshellposition(value);
  // @@protoc_insertion_point(field_set:OpenVectorFormat.JobLUT.jobShellPosition)
}

// repeated int64 workPlanePositions = 2;
inline int JobLUT::_internal_workplanepositions_size() const {
  return workplanepositions_.size();
}
inline int JobLUT::workplanepositions_size() const {
  return _internal_workplanepositions_size();
}
inline void JobLUT::clear_workplanepositions() {
  workplanepositions_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobLUT::_internal_workplanepositions(int index) const {
  return workplanepositions_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 JobLUT::workplanepositions(int index) const {
  // @@protoc_insertion_point(field_get:OpenVectorFormat.JobLUT.workPlanePositions)
  return _internal_workplanepositions(index);
}
inline void JobLUT::set_workplanepositions(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  workplanepositions_.Set(index, value);
  // @@protoc_insertion_point(field_set:OpenVectorFormat.JobLUT.workPlanePositions)
}
inline void JobLUT::_internal_add_workplanepositions(::PROTOBUF_NAMESPACE_ID::int64 value) {
  workplanepositions_.Add(value);
}
inline void JobLUT::add_workplanepositions(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_workplanepositions(value);
  // @@protoc_insertion_point(field_add:OpenVectorFormat.JobLUT.workPlanePositions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
JobLUT::_internal_workplanepositions() const {
  return workplanepositions_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
JobLUT::workplanepositions() const {
  // @@protoc_insertion_point(field_list:OpenVectorFormat.JobLUT.workPlanePositions)
  return _internal_workplanepositions();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
JobLUT::_internal_mutable_workplanepositions() {
  return &workplanepositions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
JobLUT::mutable_workplanepositions() {
  // @@protoc_insertion_point(field_mutable_list:OpenVectorFormat.JobLUT.workPlanePositions)
  return _internal_mutable_workplanepositions();
}

// -------------------------------------------------------------------

// WorkPlaneLUT

// int64 workPlaneShellPosition = 1;
inline void WorkPlaneLUT::clear_workplaneshellposition() {
  workplaneshellposition_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WorkPlaneLUT::_internal_workplaneshellposition() const {
  return workplaneshellposition_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WorkPlaneLUT::workplaneshellposition() const {
  // @@protoc_insertion_point(field_get:OpenVectorFormat.WorkPlaneLUT.workPlaneShellPosition)
  return _internal_workplaneshellposition();
}
inline void WorkPlaneLUT::_internal_set_workplaneshellposition(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  workplaneshellposition_ = value;
}
inline void WorkPlaneLUT::set_workplaneshellposition(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_workplaneshellposition(value);
  // @@protoc_insertion_point(field_set:OpenVectorFormat.WorkPlaneLUT.workPlaneShellPosition)
}

// repeated int64 vectorBlocksPositions = 2;
inline int WorkPlaneLUT::_internal_vectorblockspositions_size() const {
  return vectorblockspositions_.size();
}
inline int WorkPlaneLUT::vectorblockspositions_size() const {
  return _internal_vectorblockspositions_size();
}
inline void WorkPlaneLUT::clear_vectorblockspositions() {
  vectorblockspositions_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WorkPlaneLUT::_internal_vectorblockspositions(int index) const {
  return vectorblockspositions_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WorkPlaneLUT::vectorblockspositions(int index) const {
  // @@protoc_insertion_point(field_get:OpenVectorFormat.WorkPlaneLUT.vectorBlocksPositions)
  return _internal_vectorblockspositions(index);
}
inline void WorkPlaneLUT::set_vectorblockspositions(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  vectorblockspositions_.Set(index, value);
  // @@protoc_insertion_point(field_set:OpenVectorFormat.WorkPlaneLUT.vectorBlocksPositions)
}
inline void WorkPlaneLUT::_internal_add_vectorblockspositions(::PROTOBUF_NAMESPACE_ID::int64 value) {
  vectorblockspositions_.Add(value);
}
inline void WorkPlaneLUT::add_vectorblockspositions(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_vectorblockspositions(value);
  // @@protoc_insertion_point(field_add:OpenVectorFormat.WorkPlaneLUT.vectorBlocksPositions)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
WorkPlaneLUT::_internal_vectorblockspositions() const {
  return vectorblockspositions_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
WorkPlaneLUT::vectorblockspositions() const {
  // @@protoc_insertion_point(field_list:OpenVectorFormat.WorkPlaneLUT.vectorBlocksPositions)
  return _internal_vectorblockspositions();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
WorkPlaneLUT::_internal_mutable_vectorblockspositions() {
  return &vectorblockspositions_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
WorkPlaneLUT::mutable_vectorblockspositions() {
  // @@protoc_insertion_point(field_mutable_list:OpenVectorFormat.WorkPlaneLUT.vectorBlocksPositions)
  return _internal_mutable_vectorblockspositions();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace OpenVectorFormat

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ovf_5flut_2eproto
